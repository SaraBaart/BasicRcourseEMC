# Indexing Practical


## Selecting Data


**Answer the following without typing the commands into R. Use `?` if you're not sure what the object is or what the function does**

### Question 1: length of objects

#### a {.unnumbered}

What is 
```{r}
#| eval: false
#| quiet: true
length(letters)
```

<br>

#### b {.unnumbered}
What is
```{r}
#| eval: false
#| quiet: true
length(letters == LETTERS)
```

### Question 2: `which`

#### a {.unnumbered}

What is
```{r}
#| eval: false
#| quiet: true
which(letters %in% c("a", "d"))
```


#### b {.unnumbered}

What is
```{r}
#| eval: false
#| quiet: true
which(c("a", 7, "d") %in% letters)
```
<br>

### Question 3: Logical indexing of a vector

#### a {.unnumbered}
What is
```{r}
#| eval: false
#| quiet: true
letters[LETTERS > "W"]
```
<br>

#### b {.unnumbered}
What is
```{r}
#| eval: false
#| quiet: true
letters[!LETTERS > "C"]
```
<br>

### Question 3: Indexing of a vector using integers


#### a {.unnumbered}
What is
```{r}
#| eval: false
#| quiet: true
letters[8]
```
<br>

#### b {.unnumbered}
What is
```{r}
#| eval: false
#| quiet: true
letters[-26:-2]
```
<br>

### Question 5: Sequences

#### a {.unnumbered}
What is
```{r}
#| eval: false
#| quiet: true
1:6
```

#### b {.unnumbered}
What is
```{r}
#| eval: false
#| quiet: true
10:3
```

#### c {.unnumbered}
What is
```{r}
#| eval: false
#| quiet: true
seq(from = 1, to = 20, by = 3)
```
<br>



### Question 6: Selection from a matrix

We define `x` as 
```{r}
#| eval: false
#| quiet: true
x <- matrix(8:11, nrow = 6, ncol = 4)
```

What are 
```{r}
#| eval: false
#| quiet: true
x[, 3] + 2 * x[, 2]
nrow(x)
x[x[, 3] > 10, ]
```


### Question 7

Use R to answer the following:

Create a vector (using `c()`) called `a` (i.e. assign it to an object called `a`) with four elements which are the integers 5 to 8 (inclusive).

a) Display element 2 of `a`.
 <br>
b) Display element 4 of `a`.
 <br>
c) Assign the integers 3 and 4 to object `b` and use `b` to select elements 3 and 4 of object `a`.
 <br>
d) Display every element of `a` except element 2. 
 <br>
e) Display every element of `a` except elements 3 and 4. 
 <br>
f) Display only those elements of `a` that are greater than or equal to 6.
 <br>
g) Display only those elements of `a` that are not equal to 7.
 <br>
h) Use the `list` function to create an object `ab` which is a list of the two objects `a` and `b`.
 <br>
i) Display `ab`.
 <br>
j) Change the names of the elements in `ab` to `a` and `b`.
<br>
k) Display `ab` again. What has changed?
 <br>

### Question 8
 
a) Create this matrix `m`:

```{r}
m <- matrix(1:9, nrow = 3, byrow = T)
m
```
b) Why are the numbers 1, 2, and 3 in the first row and not the first column? 
<br>
c) Display the element on the second row and second column of  `m`.
<br> 
d) Display only the 2nd row of `m`.
<br>
e) Display only the 3rd column of `m`.
<br>
f) Display only the 2nd and 3rd columns of `m`. Do so in two different ways.



### Question 9

Using the **heart** data set (remember to load the survival package): 

* Select the first row. 
* Select the first column. 
* Select the column `surgery`.

### Question 10
Create a list:

```{r}
x <- c(1,2,3,4)
mat <- matrix(1:9, 3, 3)
myList <- list(a=x, b=mat)
```

a) What is the class of `myList[[2]]` 

b) What is the class of `myList[2]` 

c) Write R code to extract the first element (the vector) by name

**If you want to save your work: save your R session and/or source code!**

